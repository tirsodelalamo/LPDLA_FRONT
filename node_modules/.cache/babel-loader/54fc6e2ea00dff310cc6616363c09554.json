{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tirso/Escritorio/poesias/client/src/components/Pages/Summary/Summary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PoetryService from \"../../../service/PoetryService\";\n\nconst Summary = () => {\n  _s();\n\n  const poetryService = new PoetryService();\n  const [allPoetry, updateAllPoetry] = useState([]);\n\n  const loadPoetry = () => {\n    poetryService.getAllPoetry().then(response => updateAllPoetry(response.data)).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    loadPoetry();\n  }, [updateAllPoetry]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"\\xCDndice\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Summary, \"HVWYY7tztkhsoZSnyB+7gdVnlmA=\");\n\n_c = Summary;\nexport default Summary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"sources":["/home/tirso/Escritorio/poesias/client/src/components/Pages/Summary/Summary.js"],"names":["React","useState","useEffect","PoetryService","Summary","poetryService","allPoetry","updateAllPoetry","loadPoetry","getAllPoetry","then","response","data","catch","err","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAMC,aAAa,GAAG,IAAIF,aAAJ,EAAtB;AAEA,QAAM,CAACG,SAAD,EAAYC,eAAZ,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACvBH,IAAAA,aAAa,CACVI,YADH,GAEGC,IAFH,CAESC,QAAD,IAAcJ,eAAe,CAACI,QAAQ,CAACC,IAAV,CAFrC,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,GALD;;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACD,eAAD,CAFM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CArBD;;GAAMH,O;;KAAAA,O;AAuBN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PoetryService from \"../../../service/PoetryService\";\n\nconst Summary = () => {\n\n    const poetryService = new PoetryService();\n\n    const [allPoetry, updateAllPoetry] = useState([]);\n\n    const loadPoetry = () => {\n      poetryService\n        .getAllPoetry()\n        .then((response) => updateAllPoetry(response.data))\n        .catch((err) => console.log(err));\n    };\n\n    useEffect(() => {\n      loadPoetry();\n    }, [updateAllPoetry]);\n\n    return ( \n        <h1>√çndice</h1>\n        \n     );\n}\n \nexport default Summary;"]},"metadata":{},"sourceType":"module"}