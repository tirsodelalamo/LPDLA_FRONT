{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './PoetryList.css';\nimport PoetryCard from './PoetryCard';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nconst PoetryList = props => {\n  _s();\n\n  const {\n    allPoetry,\n    theme\n  } = props;\n  const [actualpage, saveActualPage] = useState(1);\n  const [totalpages, saveTotalPages] = useState(1);\n  const allPoetryFiltered = allPoetry.filter(elm => elm.tags === theme);\n  useEffect(() => {\n    const cardsPerPage = 12;\n    const calculateCardsPerPage = Math.ceil((allPoetryFiltered.length - 1) / cardsPerPage);\n    saveTotalPages(calculateCardsPerPage);\n  }); // DEPENDENCIA ACTUALPAGE\n  //Definir p치gina anterior\n\n  const previousPage = () => {\n    const nuevaPaginaActual = paginaactual - 1;\n    if (nuevaPaginaActual === 0) return;\n    guardarPaginaActual(nuevaPaginaActual);\n  }; //Definir p치gina siguiente\n\n\n  const paginaSiguiente = () => {\n    const nuevaPaginaActual = paginaactual + 1;\n    if (nuevaPaginaActual > totalpaginas) return;\n    guardarPaginaActual(nuevaPaginaActual);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"list-container\",\n    children: allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        className: \"list\",\n        children: allPoetry.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm\n        }, elm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        className: \"list\",\n        children: allPoetryFiltered.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm\n        }, elm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoetryList, \"NcNfMsyiaWRtEhlYgh683P+lPd0=\");\n\n_c = PoetryList;\nexport default PoetryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoetryList\");","map":{"version":3,"sources":["/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js"],"names":["React","useState","useEffect","PoetryCard","Container","Row","CardDeck","PoetryList","props","allPoetry","theme","actualpage","saveActualPage","totalpages","saveTotalPages","allPoetryFiltered","filter","elm","tags","cardsPerPage","calculateCardsPerPage","Math","ceil","length","previousPage","nuevaPaginaActual","paginaactual","guardarPaginaActual","paginaSiguiente","totalpaginas","map","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBF,KAA7B;AAEA,QAAM,CAACG,UAAD,EAAaC,cAAb,IAA+BX,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACY,UAAD,EAAaC,cAAb,IAA+Bb,QAAQ,CAAC,CAAD,CAA7C;AAEA,QAAMc,iBAAiB,GAAGN,SAAS,CAACO,MAAV,CAAkBC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAaR,KAAvC,CAA1B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,YAAY,GAAG,EAArB;AACA,UAAMC,qBAAqB,GAAGC,IAAI,CAACC,IAAL,CAC5B,CAACP,iBAAiB,CAACQ,MAAlB,GAA2B,CAA5B,IAAiCJ,YADL,CAA9B;AAIAL,IAAAA,cAAc,CAACM,qBAAD,CAAd;AACD,GAPQ,CAAT,CAR4B,CAexB;AAEJ;;AACA,QAAMI,YAAY,GAAG,MAAM;AACzB,UAAMC,iBAAiB,GAAGC,YAAY,GAAG,CAAzC;AAEA,QAAID,iBAAiB,KAAK,CAA1B,EAA6B;AAE7BE,IAAAA,mBAAmB,CAACF,iBAAD,CAAnB;AACD,GAND,CAlB4B,CA0B5B;;;AACA,QAAMG,eAAe,GAAG,MAAM;AAC5B,UAAMH,iBAAiB,GAAGC,YAAY,GAAG,CAAzC;AAEA,QAAID,iBAAiB,GAAGI,YAAxB,EAAsC;AAEtCF,IAAAA,mBAAmB,CAACF,iBAAD,CAAnB;AACD,GAND;;AAQA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA,cACGV,iBAAiB,CAACQ,MAAlB,GAA2B,CAA3B,IAAgCb,KAAK,KAAK,gBAA1C,gBACC,QAAC,GAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAAA,kBACGD,SAAS,CAACqB,GAAV,CAAeb,GAAD,iBACb,QAAC,UAAD,OAA8BA;AAA9B,WAAiBA,GAAG,CAACc,GAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBASC,QAAC,GAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAAA,kBACGhB,iBAAiB,CAACe,GAAlB,CAAuBb,GAAD,iBACrB,QAAC,UAAD,OAA8BA;AAA9B,WAAiBA,GAAG,CAACc,GAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxDD;;GAAMxB,U;;KAAAA,U;AA0DN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PoetryList.css'\n\nimport PoetryCard from './PoetryCard'\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\"\n\nconst PoetryList = (props) => {\n  const { allPoetry, theme } = props;\n\n  const [actualpage, saveActualPage] = useState(1);\n  const [totalpages, saveTotalPages] = useState(1);\n\n  const allPoetryFiltered = allPoetry.filter((elm) => elm.tags === theme);\n\n  useEffect(() => {\n    const cardsPerPage = 12;\n    const calculateCardsPerPage = Math.ceil(\n      (allPoetryFiltered.length - 1) / cardsPerPage\n    );\n\n    saveTotalPages(calculateCardsPerPage);\n  }); // DEPENDENCIA ACTUALPAGE\n\n  //Definir p치gina anterior\n  const previousPage = () => {\n    const nuevaPaginaActual = paginaactual - 1;\n\n    if (nuevaPaginaActual === 0) return;\n\n    guardarPaginaActual(nuevaPaginaActual);\n  };\n\n  //Definir p치gina siguiente\n  const paginaSiguiente = () => {\n    const nuevaPaginaActual = paginaactual + 1;\n\n    if (nuevaPaginaActual > totalpaginas) return;\n\n    guardarPaginaActual(nuevaPaginaActual);\n  };\n\n  return (\n    <Container className=\"list-container\">\n      {allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? (\n        <Row>\n          <CardDeck className=\"list\">\n            {allPoetry.map((elm) => (\n              <PoetryCard key={elm._id} {...elm} />\n            ))}\n          </CardDeck>\n        </Row>\n      ) : (\n        <Row>\n          <CardDeck className=\"list\">\n            {allPoetryFiltered.map((elm) => (\n              <PoetryCard key={elm._id} {...elm} />\n            ))}\n          </CardDeck>\n        </Row>\n      )}\n    </Container>\n  );\n}\n \nexport default PoetryList;"]},"metadata":{},"sourceType":"module"}