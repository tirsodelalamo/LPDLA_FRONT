{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js\";\nimport React from 'react';\nimport './PoetryList.css';\nimport PoetryCard from './PoetryCard';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nconst PoetryList = props => {\n  const {\n    allPoetry,\n    theme\n  } = props;\n  allPoetry.sort(() => Math.random() - 0.5);\n  const allPoetryFiltered = allPoetry.filter(elm => elm.tags === theme);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"list-container\",\n    children: allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        className: \"list\",\n        children: allPoetry.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm,\n          ...props\n        }, elm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        className: \"list\",\n        children: allPoetryFiltered.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm,\n          ...props\n        }, elm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PoetryList;\nexport default PoetryList; // INTENTO DE INCORPORAR SPINNER\n// import React from \"react\";\n// import \"./PoetryList.css\";\n// import PoetryCard from \"./PoetryCard\";\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import CardDeck from \"react-bootstrap/CardDeck\";\n// const PoetryList = (props) => {\n//   const { allPoetry, theme } = props;\n//   allPoetry.sort(() => Math.random() - 0.5);\n//   const allPoetryFiltered = allPoetry.filter((elm) => elm.tags === theme);\n//   return (\n//   <>\n//     {allPoetry ?\n//       <Container className=\"list-container\">\n//         {allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? (\n//           <Row>\n//             <CardDeck className=\"list\">\n//               {allPoetry.map((elm) => (\n//                 <PoetryCard key={elm._id} {...elm} />\n//               ))}\n//             </CardDeck>\n//           </Row>\n//         ) : (\n//             <Row>\n//               <CardDeck className=\"list\">\n//                 {allPoetryFiltered.map((elm) => (\n//                   <PoetryCard key={elm._id} {...elm} />\n//                 ))}\n//               </CardDeck>\n//             </Row>\n//           )}\n//       </Container>\n//       :\n//       <Container className=\"list-container\">\n//           <h1>Hola</h1>\n//           {console.log('Hola')}\n//       </Container>\n//       }\n//       </>\n//   );\n// };\n// export default PoetryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoetryList\");","map":{"version":3,"sources":["/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js"],"names":["React","PoetryCard","Container","Row","CardDeck","PoetryList","props","allPoetry","theme","sort","Math","random","allPoetryFiltered","filter","elm","tags","length","map","_id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBF,KAA7B;AAEAC,EAAAA,SAAS,CAACE,IAAV,CAAe,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAArC;AAEA,QAAMC,iBAAiB,GAAGL,SAAS,CAACM,MAAV,CAAkBC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAaP,KAAvC,CAA1B;AAGA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA,cACGI,iBAAiB,CAACI,MAAlB,GAA2B,CAA3B,IAAgCR,KAAK,KAAK,gBAA1C,gBACC,QAAC,GAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAAA,kBACGD,SAAS,CAACU,GAAV,CAAeH,GAAD,iBACb,QAAC,UAAD,OAA8BA,GAA9B;AAAA,aAAuCR;AAAvC,WAAiBQ,GAAG,CAACI,GAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBASC,QAAC,GAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAAA,kBACGN,iBAAiB,CAACK,GAAlB,CAAuBH,GAAD,iBACrB,QAAC,UAAD,OAA8BA,GAA9B;AAAA,aAAuCR;AAAvC,WAAiBQ,GAAG,CAACI,GAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA/BD;;KAAMb,U;AAiCN,eAAeA,UAAf,C,CAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport './PoetryList.css'\n\nimport PoetryCard from './PoetryCard'\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\"\n\nconst PoetryList = (props) => {\n\n  const { allPoetry, theme } = props;\n\n  allPoetry.sort(() => Math.random() - 0.5) \n\n  const allPoetryFiltered = allPoetry.filter((elm) => elm.tags === theme);\n\n\n  return (\n    <Container className=\"list-container\">\n      {allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? (\n        <Row>\n          <CardDeck className=\"list\">\n            {allPoetry.map((elm) => (\n              <PoetryCard key={elm._id} {...elm} {...props}/>\n            ))}\n          </CardDeck>\n        </Row>\n      ) : (\n        <Row>\n          <CardDeck className=\"list\">\n            {allPoetryFiltered.map((elm) => (\n              <PoetryCard key={elm._id} {...elm} {...props}/>\n            ))}\n          </CardDeck>\n        </Row>\n      )}\n\n    </Container>\n  );\n}\n \nexport default PoetryList;\n\n\n\n// INTENTO DE INCORPORAR SPINNER\n\n// import React from \"react\";\n// import \"./PoetryList.css\";\n\n// import PoetryCard from \"./PoetryCard\";\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import CardDeck from \"react-bootstrap/CardDeck\";\n\n// const PoetryList = (props) => {\n//   const { allPoetry, theme } = props;\n\n//   allPoetry.sort(() => Math.random() - 0.5);\n\n//   const allPoetryFiltered = allPoetry.filter((elm) => elm.tags === theme);\n\n//   return (\n  \n//   <>\n\n//     {allPoetry ?\n\n//       <Container className=\"list-container\">\n//         {allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? (\n//           <Row>\n//             <CardDeck className=\"list\">\n//               {allPoetry.map((elm) => (\n//                 <PoetryCard key={elm._id} {...elm} />\n//               ))}\n//             </CardDeck>\n//           </Row>\n//         ) : (\n//             <Row>\n//               <CardDeck className=\"list\">\n//                 {allPoetryFiltered.map((elm) => (\n//                   <PoetryCard key={elm._id} {...elm} />\n//                 ))}\n//               </CardDeck>\n//             </Row>\n//           )}\n//       </Container>\n      \n//       :\n\n//       <Container className=\"list-container\">\n//           <h1>Hola</h1>\n//           {console.log('Hola')}\n//       </Container>\n  \n//       }\n      \n//       </>\n\n\n//   );\n// };\n\n// export default PoetryList;\n\n"]},"metadata":{},"sourceType":"module"}