{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './PoetryList.css';\nimport PoetryCard from './PoetryCard';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nconst PoetryList = props => {\n  _s();\n\n  const {\n    allPoetry,\n    theme\n  } = props;\n  const [actualpage, saveActualPage] = useState(1);\n  const [totalpages, saveTotalPages] = useState(1);\n  const allPoetryFiltered = allPoetry.filter(elm => elm.tags === theme);\n  useEffect(() => {\n    const cardsPerPage = 12;\n    const calculateCardsPerPage = Math.ceil((allPoetryFiltered.length - 1) / cardsPerPage);\n    saveTotalPages(calculateCardsPerPage);\n  }); //\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"list-container\",\n    children: allPoetryFiltered.length < 1 || theme === 'Escoja un tema' ? /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        className: \"list\",\n        children: allPoetry.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm\n        }, elm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        className: \"list\",\n        children: allPoetryFiltered.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm\n        }, elm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PoetryList, \"NcNfMsyiaWRtEhlYgh683P+lPd0=\");\n\n_c = PoetryList;\nexport default PoetryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoetryList\");","map":{"version":3,"sources":["/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js"],"names":["React","useState","useEffect","PoetryCard","Container","Row","CardDeck","PoetryList","props","allPoetry","theme","actualpage","saveActualPage","totalpages","saveTotalPages","allPoetryFiltered","filter","elm","tags","cardsPerPage","calculateCardsPerPage","Math","ceil","length","map","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBF,KAA7B;AAEA,QAAM,CAACG,UAAD,EAAaC,cAAb,IAA+BX,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACY,UAAD,EAAaC,cAAb,IAA+Bb,QAAQ,CAAC,CAAD,CAA7C;AAEA,QAAMc,iBAAiB,GAAGN,SAAS,CAACO,MAAV,CAAiBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,KAAaR,KAArC,CAA1B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMiB,YAAY,GAAG,EAArB;AACA,UAAMC,qBAAqB,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACP,iBAAiB,CAACQ,MAAlB,GAAyB,CAA1B,IAAgCJ,YAA1C,CAA9B;AAEAL,IAAAA,cAAc,CAACM,qBAAD,CAAd;AAED,GAPQ,CAAT,CAT4B,CAgBzB;;AAGD,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA,cACGL,iBAAiB,CAACQ,MAAlB,GAA2B,CAA3B,IAAgCb,KAAK,KAAK,gBAA1C,gBAEC,QAAC,GAAD;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAAA,kBACGD,SAAS,CAACe,GAAV,CAAeP,GAAD,iBACb,QAAC,UAAD,OAA8BA;AAA9B,WAAiBA,GAAG,CAACQ,GAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFD,gBAUG,QAAC,GAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAAA,kBACGV,iBAAiB,CAACS,GAAlB,CAAuBP,GAAD,iBACrB,QAAC,UAAD,OAA8BA;AAA9B,WAAiBA,GAAG,CAACQ,GAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXN;AAAA;AAAA;AAAA;AAAA,UADF;AAsBH,CAzCD;;GAAMlB,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PoetryList.css'\n\nimport PoetryCard from './PoetryCard'\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\"\n\nconst PoetryList = (props) => {\n\n  const { allPoetry, theme } = props\n\n  const [actualpage, saveActualPage] = useState(1) \n  const [totalpages, saveTotalPages] = useState(1)\n\n  const allPoetryFiltered = allPoetry.filter(elm => elm.tags === theme)\n\n  useEffect(() => {\n    \n    const cardsPerPage = 12\n    const calculateCardsPerPage = Math.ceil((allPoetryFiltered.length-1)  / cardsPerPage)\n    \n    saveTotalPages(calculateCardsPerPage)\n\n  }) //\n\n\n    return (\n      <Container className='list-container'>\n        {allPoetryFiltered.length < 1 || theme === 'Escoja un tema' ? (\n          \n          <Row>\n              <CardDeck className=\"list\">\n                {allPoetry.map((elm) => (\n                  <PoetryCard key={elm._id} {...elm} />\n                ))}\n              </CardDeck>\n            </Row>\n        ) : (\n            <Row>\n              <CardDeck className=\"list\">\n                {allPoetryFiltered.map((elm) => (\n                  <PoetryCard key={elm._id} {...elm} />\n                ))}\n              </CardDeck>\n            </Row>\n        )}\n      </Container>\n    );\n}\n \nexport default PoetryList;"]},"metadata":{},"sourceType":"module"}