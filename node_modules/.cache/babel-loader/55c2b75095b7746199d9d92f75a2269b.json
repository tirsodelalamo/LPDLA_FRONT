{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js\";\n// import React from 'react';\n// import './PoetryList.css'\n// import PoetryCard from './PoetryCard'\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import CardDeck from \"react-bootstrap/CardDeck\"\n// const PoetryList = (props) => {\n//   const { allPoetry, theme } = props;\n//   allPoetry.sort(() => Math.random() - 0.5) \n//   const allPoetryFiltered = allPoetry.filter((elm) => elm.tags === theme);\n//   return (\n//     <Container className=\"list-container\">\n//       {allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? (\n//         <Row>\n//           <CardDeck className=\"list\">\n//             {allPoetry.map((elm) => (\n//               <PoetryCard key={elm._id} {...elm} />\n//             ))}\n//           </CardDeck>\n//         </Row>\n//       ) : (\n//         <Row>\n//           <CardDeck className=\"list\">\n//             {allPoetryFiltered.map((elm) => (\n//               <PoetryCard key={elm._id} {...elm} />\n//             ))}\n//           </CardDeck>\n//         </Row>\n//       )}\n//     </Container>\n//   );\n// }\n// export default PoetryList;\nimport React from \"react\";\nimport \"./PoetryList.css\";\nimport PoetryCard from \"./PoetryCard\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nconst PoetryList = props => {\n  const {\n    allPoetry,\n    theme\n  } = props;\n  allPoetry.sort(() => Math.random() - 0.5);\n  const allPoetryFiltered = allPoetry.filter(elm => elm.tags === theme);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: allPoetryFiltered ? /*#__PURE__*/_jsxDEV(Container, {\n      className: \"list-container\",\n      children: allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(CardDeck, {\n          className: \"list\",\n          children: allPoetry.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm\n          }, elm._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(CardDeck, {\n          className: \"list\",\n          children: allPoetryFiltered.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm\n          }, elm._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      className: \"list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), console.log('Hola')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = PoetryList;\nexport default PoetryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoetryList\");","map":{"version":3,"sources":["/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js"],"names":["React","PoetryCard","Container","Row","CardDeck","PoetryList","props","allPoetry","theme","sort","Math","random","allPoetryFiltered","filter","elm","tags","length","map","_id","console","log"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBF,KAA7B;AAEAC,EAAAA,SAAS,CAACE,IAAV,CAAe,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAArC;AAEA,QAAMC,iBAAiB,GAAGL,SAAS,CAACM,MAAV,CAAkBC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAaP,KAAvC,CAA1B;AAEA,sBAEA;AAAA,cAEGI,iBAAiB,gBAGhB,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,gBAArB;AAAA,gBACGA,iBAAiB,CAACI,MAAlB,GAA2B,CAA3B,IAAgCR,KAAK,KAAK,gBAA1C,gBACC,QAAC,GAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,MAApB;AAAA,oBACGD,SAAS,CAACU,GAAV,CAAeH,GAAD,iBACb,QAAC,UAAD,OAA8BA;AAA9B,aAAiBA,GAAG,CAACI,GAArB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,gBASG,QAAC,GAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,MAApB;AAAA,oBACGN,iBAAiB,CAACK,GAAlB,CAAuBH,GAAD,iBACrB,QAAC,UAAD,OAA8BA;AAA9B,aAAiBA,GAAG,CAACI,GAArB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVN;AAAA;AAAA;AAAA;AAAA,YAHgB,gBAyBhB,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,gBAArB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BJ,mBAFA;AAwCD,CA/CD;;KAAMf,U;AAiDN,eAAeA,UAAf","sourcesContent":["// import React from 'react';\n// import './PoetryList.css'\n\n// import PoetryCard from './PoetryCard'\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import CardDeck from \"react-bootstrap/CardDeck\"\n\n// const PoetryList = (props) => {\n\n//   const { allPoetry, theme } = props;\n\n//   allPoetry.sort(() => Math.random() - 0.5) \n\n//   const allPoetryFiltered = allPoetry.filter((elm) => elm.tags === theme);\n\n\n//   return (\n//     <Container className=\"list-container\">\n//       {allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? (\n//         <Row>\n//           <CardDeck className=\"list\">\n//             {allPoetry.map((elm) => (\n//               <PoetryCard key={elm._id} {...elm} />\n//             ))}\n//           </CardDeck>\n//         </Row>\n//       ) : (\n//         <Row>\n//           <CardDeck className=\"list\">\n//             {allPoetryFiltered.map((elm) => (\n//               <PoetryCard key={elm._id} {...elm} />\n//             ))}\n//           </CardDeck>\n//         </Row>\n//       )}\n\n//     </Container>\n//   );\n// }\n \n// export default PoetryList;\n\nimport React from \"react\";\nimport \"./PoetryList.css\";\n\nimport PoetryCard from \"./PoetryCard\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nconst PoetryList = (props) => {\n  const { allPoetry, theme } = props;\n\n  allPoetry.sort(() => Math.random() - 0.5);\n\n  const allPoetryFiltered = allPoetry.filter((elm) => elm.tags === theme);\n\n  return (\n  \n  <>\n\n    {allPoetryFiltered ?\n\n\n      <Container className=\"list-container\">\n        {allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? (\n          <Row>\n            <CardDeck className=\"list\">\n              {allPoetry.map((elm) => (\n                <PoetryCard key={elm._id} {...elm} />\n              ))}\n            </CardDeck>\n          </Row>\n        ) : (\n            <Row>\n              <CardDeck className=\"list\">\n                {allPoetryFiltered.map((elm) => (\n                  <PoetryCard key={elm._id} {...elm} />\n                ))}\n              </CardDeck>\n            </Row>\n          )}\n      </Container>\n      \n      :\n\n      <Container className=\"list-container\">\n          <h1>Hola</h1>\n          {console.log('Hola')}\n      </Container>\n  \n      }\n      \n      </>\n\n\n  );\n};\n\nexport default PoetryList;\n\n"]},"metadata":{},"sourceType":"module"}