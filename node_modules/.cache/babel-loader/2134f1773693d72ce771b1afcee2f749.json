{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js\";\nimport React, { useState, useEffect } from 'react';\nimport './PoetryList.css';\nimport PoetryCard from './PoetryCard';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nconst PoetryList = props => {\n  const {\n    allPoetry,\n    theme\n  } = props; // const [actualpage, saveActualPage] = useState(1);\n  // const [totalpages, saveTotalPages] = useState(1);\n\n  const allPoetryFiltered = allPoetry.filter(elm => elm.tags === theme); // useEffect(() => {\n  //   const cardsPerPage = 12;\n  //   const calculateCardsPerPage = Math.ceil(\n  //     (allPoetry.length - 1) / cardsPerPage\n  //   );\n  //   saveTotalPages(calculateCardsPerPage);\n  // }, [actualpage, allPoetry]); // DEPENDENCIA ACTUALPAGE\n  // //DEFINIR PAGINA ANTERIOR\n  // const previousPage = () => {\n  //   const newActualPage = actualpage - 1;\n  //   if (newActualPage === 0) return;\n  //   saveActualPage(newActualPage);\n  // };\n  // //DEFINIR PAGINA SIGUIENTE\n  // const nextPage = () => {\n  //   const newActualPage = actualpage + 1;\n  //   if (newActualPage > totalpages) return;\n  //   saveActualPage(newActualPage);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"list-container\",\n    children: [allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        className: \"list\",\n        children: allPoetry.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm\n        }, elm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        className: \"list\",\n        children: allPoetryFiltered.map(elm => /*#__PURE__*/_jsxDEV(PoetryCard, { ...elm\n        }, elm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), \")}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PoetryList;\nexport default PoetryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoetryList\");","map":{"version":3,"sources":["/home/tirso/Escritorio/poesias/client/src/components/Pages/Poetry/PoetryList.js"],"names":["React","useState","useEffect","PoetryCard","Container","Row","CardDeck","PoetryList","props","allPoetry","theme","allPoetryFiltered","filter","elm","tags","length","map","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBF,KAA7B,CAF4B,CAI5B;AACA;;AAEA,QAAMG,iBAAiB,GAAGF,SAAS,CAACG,MAAV,CAAkBC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAaJ,KAAvC,CAA1B,CAP4B,CAS5B;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA,eACGC,iBAAiB,CAACI,MAAlB,GAA2B,CAA3B,IAAgCL,KAAK,KAAK,gBAA1C,gBACC,QAAC,GAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAAA,kBACGD,SAAS,CAACO,GAAV,CAAeH,GAAD,iBACb,QAAC,UAAD,OAA8BA;AAA9B,WAAiBA,GAAG,CAACI,GAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBASC,QAAC,GAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAAA,kBACGN,iBAAiB,CAACK,GAAlB,CAAuBH,GAAD,iBACrB,QAAC,UAAD,OAA8BA;AAA9B,WAAiBA,GAAG,CAACI,GAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAlFD;;KAAMV,U;AAoFN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PoetryList.css'\n\nimport PoetryCard from './PoetryCard'\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CardDeck from \"react-bootstrap/CardDeck\"\n\nconst PoetryList = (props) => {\n\n  const { allPoetry, theme } = props;\n\n  // const [actualpage, saveActualPage] = useState(1);\n  // const [totalpages, saveTotalPages] = useState(1);\n\n  const allPoetryFiltered = allPoetry.filter((elm) => elm.tags === theme);\n\n  // useEffect(() => {\n  //   const cardsPerPage = 12;\n  //   const calculateCardsPerPage = Math.ceil(\n  //     (allPoetry.length - 1) / cardsPerPage\n  //   );\n\n  //   saveTotalPages(calculateCardsPerPage);\n\n  // }, [actualpage, allPoetry]); // DEPENDENCIA ACTUALPAGE\n\n  // //DEFINIR PAGINA ANTERIOR\n  // const previousPage = () => {\n\n  //   const newActualPage = actualpage - 1;\n\n  //   if (newActualPage === 0) return;\n\n  //   saveActualPage(newActualPage);\n\n  // };\n\n  // //DEFINIR PAGINA SIGUIENTE\n  // const nextPage = () => {\n\n  //   const newActualPage = actualpage + 1;\n\n  //   if (newActualPage > totalpages) return;\n\n  //   saveActualPage(newActualPage);\n\n  // };\n\n  return (\n    <Container className=\"list-container\">\n      {allPoetryFiltered.length < 1 || theme === \"Escoja un tema\" ? (\n        <Row>\n          <CardDeck className=\"list\">\n            {allPoetry.map((elm) => (\n              <PoetryCard key={elm._id} {...elm} />\n            ))}\n          </CardDeck>\n        </Row>\n      ) : (\n        <Row>\n          <CardDeck className=\"list\">\n            {allPoetryFiltered.map((elm) => (\n              <PoetryCard key={elm._id} {...elm} />\n            ))}\n          </CardDeck>\n        </Row>\n      )}\n\n      {/* {actualpage === 1 ? null : (\n        <button\n          type=\"button\"\n          className=\"bbtn btn-info mr-1\"\n          onClick={previousPage}\n        >\n          &laquo; Anterior\n        </button>\n      )}\n\n      {actualpage === totalpages ? null : (\n        <button\n          type=\"button\"\n          className=\"bbtn btn-info mr-1\"\n          onClick={nextPage}\n        >\n          Siguiente &raquo;\n        </button> */}\n      )}\n    </Container>\n  );\n}\n \nexport default PoetryList;"]},"metadata":{},"sourceType":"module"}